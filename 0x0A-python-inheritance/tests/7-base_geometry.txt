    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("width", 89)
    >>> bg.integer_validator("width", -2) #doctest: +ELLIPSIS
    Traceback (most recent call last):
    ValueError: ...
    >>> bg.integer_validator("width", "1") #doctest: +ELLIPSIS
    Traceback (most recent call last):
    TypeError: ...
    >>> bg.integer_validator("width") #doctest: +ELLIPSIS
    Traceback (most recent call last):
    TypeError: ...
    >>> bg.integer_validator("width", 100.8)
    Traceback (most recent call last):
    TypeError: width must be an integer
    >>> bg.integer_validator("width" 3)
    Traceback (most recent call last):
    SyntaxError: invalid syntax
    >>> bg.integer_validator() #doctest: +ELLIPSIS
    Traceback (most recent call last):
    TypeError: ...
    >>> bg.integer_validator("width", float('nan'))
    Traceback (most recent call last):
    TypeError: width must be an integer
    >>> bg.integer_validator("width", float(10E1000))
    Traceback (most recent call last):
    TypeError: width must be an integer
    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented
    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ValueError: age must be greater than 0
    >>> bg.integer_validator("age", (4,))
    Traceback (most recent call last):
    TypeError: age must be an integer
    >>> bg.integer_validator("age", [3])
    Traceback (most recent call last):
    TypeError: age must be an integer
    >>> bg.integer_validator("age", True)
    Traceback (most recent call last):
    TypeError: age must be an integer
    >>> bg.integer_validator("age", {3, 4})
    Traceback (most recent call last):
    TypeError: age must be an integer
    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
    TypeError: age must be an integer
